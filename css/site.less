@primaryColor: #e6af2e;
@SecondaryColor: #222;
@highlightColor: #6b0504;
@minWidth: 100%;

@breakpoints: {
  desktop: 989px;
  tablet: 767px;
  phone: 480px;
}

@import url('https://fonts.googleapis.com/css?family=Roboto:100,400,700');
html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
p {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  font-family: 'Open Sans', Verdana, Geneva, Tahoma, sans-serif;
  margin: 0;
  padding: 0;
  background: @SecondaryColor;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
}

/* Override the .audioplayer properties */

@prefix: ps-prefix;

.@{prefix}-info-img {
  max-width: @minWidth;
  border: 1px @SecondaryColor solid;
  box-shadow: 3px 3px 5px 0px rgba(0, 0, 0, 0.25);
  margin: 1px;
  border-radius: 2px;
}

.container {
  font-weight: 100;
  width: @minWidth;
  margin: 0 auto;
  color: @SecondaryColor;
  background-color: @primaryColor;
  padding: 5px;
}

header,
footer {
  display: flex;
  justify-content: space-between;
  padding: 8px;
  background: #001514;
  color: #ccc;
  clear: both;
  margin: 0;
}

header {
  margin-bottom: 2px;
}

footer {
  justify-content: center;
  margin-top: 2px;
}

footer {
  display: flex;
}

ul.menu {
  list-style-type: none;
  display: flex;
}

ul.menu li {
  margin: 5px 2px;
  background: @highlightColor;
  border-radius: 2px;
  line-height: 1.7;
  padding: 5px;
  cursor: pointer;
}

//execute block when lightness of highlight color is < 50%
ul.menu li:hover when (lightness(@highlightColor) < 50%) {
  background: lighten(@highlightColor, 10%);
}

ul.menu li:hover when (lightness(@highlightColor) >= 50%) {
  background: darken(@highlightColor, 10%);
}

ul.menu li a {
  text-decoration: none;
  color: #ddd;
}

#main {
  display: block;
}

//.song removed in css because minwidth dosen't use px as unit
.song when (isUnit(@minWidth, "px")) {
  width: 175px;
  border-radius: 10px;
  padding: 6px;
  margin: 2px 0;
  background-color: rgba(255, 255, 255, .25);
  border: 1px @SecondaryColor solid;
  box-shadow: 3px 3px 5px 0px rgba(0, 0, 0, 0.25);
}

.song .title {
  font-weight: 700;
}

.audioplayer .audioplayer-bar {
  display: none;
  width: 0;
}

.audioplayer .audioplayer-time.audioplayer-time-duration {
  display: none;
}


@media only screen and (min-width: @breakpoints[phone]) {
  .container {
    width: @breakpoints[phone];
  }
}

@media only screen and (min-width: @breakpoints[tablet]) {
  .info-img {
    float: right;
    max-width: 80px;
  }
  .song {
    width: 95%;
  }

  .audioplayer .audioplayer-bar {
    display: block;
    width: auto;
  }

  .audioplayer .audioplayer-time.audioplayer-time-duration {
    display: block;
  }

}

@media only screen and (min-width: @breakpoints[desktop]) {

  @minWidth: @breakpoints[desktop];

  .container {
    width: @minWidth;
  }
  .song {//math function
    //width: ceil(@breakpoints[desktop] / 3); 
    
    //ArgumentError: Error evaluating function `ceil`: argument must be a number
    //doesn't round it up to 330px
  }
}


//dummy class
.foo {
  width: @minWidth;
}

