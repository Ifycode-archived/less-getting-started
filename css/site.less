@plugin "../js/create-plugin.js";
@import "reset";
@import "colors";
@import "extend";

@minWidth: 100%;

@breakpoints: {
  desktop: 989px;
  tablet: 767px;
  phone: 480px;
};

@import (css) url('https://fonts.googleapis.com/css?family=Roboto:100,400,700');


.for(@x, 4) {
  .col-@{x} {
    width: @x * 50px;
  }
}



.font-info() {
  font-weight: 400;
}

@box-shadow: {
  background: blue;
};

html,
body {
  #ps.font-info(); //only displays the font info inside #ps
  
  //or use: #ps > .font-info();
  
  margin: 0;
  padding: 0;
  background: @SecondaryColor;
  z-index: returnTen();
  min-height: average(100, 250, 500, 400);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
}

/* Override the .audioplayer properties */

@prefix: ps-prefix;

.@{prefix}-info-img {
  max-width: @minWidth;

  //display
  .box-me-2nd();
 
  @box-shadow(); //replaces box-shadow with background
  margin: 1px;
  border-radius: 2px;
}

//see css file for difference

#shared() {
  border: 5px solid @highlightColor;
  //add other styles
}

.container {
  #shared();
  font-weight: 100;
  width: @minWidth;
  margin: 0 auto;
  color: @SecondaryColor;
  background-color: @primaryColor;
  padding: 5px;
}

header,
footer {
  display: flex;
  justify-content: space-between;
  padding: 8px;
  background: #001514;
  color: #ccc;
  clear: both;
  margin: 0;
}

header {
  margin-bottom: 2px;
}

footer { //add .container content to footer
  .container();
  justify-content: center;
  margin-top: 2px;
}

footer {
  display: flex;
}

ul.menu {
  list-style-type: none;
  display: flex;

  li {

    //change arguments value
    .box-me-2nd(2px, @newColor, dotted);
 
    margin: 5px 2px;
    background: @highlightColor;
    border-radius: 2px;
    line-height: 1.7;
    padding: 5px;
    cursor: pointer;

    //parent selector - &
    &:hover when (lightness(@highlightColor) < 50%) {
      background: lighten(@highlightColor, 10%);
    }

    &:hover when (lightness(@highlightColor) >= 50%) {
      background: darken(@highlightColor, 10%);
    }

    a {
      text-decoration: none;
      color: #ddd;

      //parent selector - &
      &:hover, &:focus {
        color: gold;
      }
    }

    @media screen and (min-width: @breakpoints[tablet]) {
      background: blue;
    }
  }
}

#main {
  display: block;
}

/*
//.song removed in css because minwidth dosen't use px as unit
.song when (isUnit(@minWidth, "px")) {
*/


.song {

  .box-me(2px);

  //cnange value of minWidth within .song block
  @minWidth: 22em;

  width: 175px;
  min-width: @minWidth;
  border-radius: 10px;
  padding: 6px;
  margin: 2px 0;
  background-color: rgba(255, 255, 255, .25);
  @box-shadow();
}

.song .title {
  font-weight: 700;
}

.audioplayer .audioplayer-bar {
  display: none;
  width: .multi(10px, 20px)[@result];

  //width: .multi(10, 20)[@result]; //without px unit
}

.audioplayer .audioplayer-time.audioplayer-time-duration {
  display: none;
}


@media only screen and (min-width: @breakpoints[phone]) {
  .container {
    width: @breakpoints[phone];
  }
}

@media only screen and (min-width: @breakpoints[tablet]) {
  .info-img {
    float: right;
    max-width: 80px;
  }
  .song {
    width: 95%;
  }

  .audioplayer .audioplayer-bar {
    display: block;
    width: auto;
  }

  .audioplayer .audioplayer-time.audioplayer-time-duration {
    display: block;
  }

}

@media only screen and (min-width: @breakpoints[desktop]) {

  @minWidth: @breakpoints[desktop];

  .container {
    width: @minWidth;
  }
  .song {//math function
    width: ceil((@breakpoints[desktop] / 3)); 
    //width: (@breakpoints[desktop] / 3); 
  }
}


//dummy class
.foo {
  width: @minWidth;
}

